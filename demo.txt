# Création d'un dossier de test
$ mkdir testGit
# Placement dans ce dossier
$ cd testGit
# La commance suivante donne une erreur car le dossier n'est pas un dépôt Git.
$ git status
fatal: Not a git repository (or any of the parent directories): .git
# Il faut commencer par l'initialiser.
$ git init
Dépôt Git vide initialisé dans /home/yvan/tmp/demoGit/testGit/.git/
# Maintenant c'est bien un dossier Git.
# La commande suivante le précise ainsi que d'autres choses.
$ git status
Sur la branche master

Validation initiale

rien à valider (créez/copiez des fichiers et utilisez "git add" pour les suivre)
# Création d'un nouveau fichier f0
$ touch f0
# Git indique que ce fichier est "non suivi" (f0 est nouveau dans la zone de travail).
$ git status
Sur la branche master

Validation initiale

Fichiers non suivis:
  (utilisez "git add <fichier>..." pour inclure dans ce qui sera validé)

        f0

aucune modification ajoutée à la validation mais des fichiers non suivis sont présents (utilisez "git add" pour les suivre)
# Pour demander à Git de le "suivre", il faut l'ajouter ou plutôt l'indexer.
$ git add f0
# Git indique que la future validation de f0 est prête (f0 est indexé).
$ git status
Sur la branche master

Validation initiale

Modifications qui seront validées :
  (utilisez "git rm --cached <fichier>..." pour désindexer)

        nouveau fichier : f0

# Pour valider f0, il faut faire un "commit". Le message "V0" l'accompagne.
$ git commit -m "V0"
[master (commit racine) 6b6581f] V0
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 f0
# Git indique que tout va bien. Le dossier de travail est identique au dossier de validation.
$ git status
Sur la branche master
rien à valider, la copie de travail est propre
# f0 est modifié (édité).
$ echo V1 > f0
# Git a bien remarqué cette modification.
$ git status
Sur la branche master
Modifications qui ne seront pas validées :
  (utilisez "git add <fichier>..." pour mettre à jour ce qui sera validé)
  (utilisez "git checkout -- <fichier>..." pour annuler les modifications dans la copie de travail)

        modifié :         f0

aucune modification n'a été ajoutée à la validation (utilisez "git add" ou "git commit -a")
# Indexation de f0
$ git add f0
# Git indique que f0 est indexé.
$ git status
Sur la branche master
Modifications qui seront validées :
  (utilisez "git reset HEAD <fichier>..." pour désindexer)

        modifié :         f0

# Affichage de toutes les versions
$ git log
commit 6b6581f1018364710d516b3c4c52ba2d2613995f
Author: yvan <yvan.maillot@gmail.com>
Date:   Sun Oct 16 23:00:19 2016 +0200

    V0
# Modification de f0
$ echo V2 > f0
# Git l'a remarqué.
$ git status
Sur la branche master
Modifications qui seront validées :
  (utilisez "git reset HEAD <fichier>..." pour désindexer)

        modifié :         f0

Modifications qui ne seront pas validées :
  (utilisez "git add <fichier>..." pour mettre à jour ce qui sera validé)
  (utilisez "git checkout -- <fichier>..." pour annuler les modifications dans la copie de travail)

        modifié :         f0

# L'indexation et la validation de f0 avec le commentaire "V1" est faite en une fois.
# C'est l'option -a qui demande l'indexation de tous les fichiers modifiés avant validation.
$ git commit -a -m "V1"
[master 54ab0d5] V1
 1 file changed, 1 insertion(+)
# Tout va bien
$ git status
Sur la branche master
rien à valider, la copie de travail est propre
# Affichage de toutes les versions et des différences entre deux versions consécutives.
$ git log -p
commit 54ab0d5752284faed8b78065b2865cb80dab274f
Author: yvan <yvan.maillot@gmail.com>
Date:   Sun Oct 16 23:00:40 2016 +0200

    V1

diff --git a/f0 b/f0
index e69de29..beef424 100644
--- a/f0
+++ b/f0
@@ -0,0 +1 @@
+V2

commit 6b6581f1018364710d516b3c4c52ba2d2613995f
Author: yvan <yvan.maillot@gmail.com>
Date:   Sun Oct 16 23:00:19 2016 +0200

    V0

diff --git a/f0 b/f0
new file mode 100644
index 0000000..e69de29
# Création d'un nouveau fichier f1
$ touch f1
# Modification de f0
$ echo V3 > f0
# Git indique que f0 a été modifié et que f1 a été ajouté.
$ git status
Sur la branche master
Modifications qui ne seront pas validées :
  (utilisez "git add <fichier>..." pour mettre à jour ce qui sera validé)
  (utilisez "git checkout -- <fichier>..." pour annuler les modifications dans la copie de travail)

        modifié :         f0

Fichiers non suivis:
  (utilisez "git add <fichier>..." pour inclure dans ce qui sera validé)

        f1

aucune modification n'a été ajoutée à la validation (utilisez "git add" ou "git commit -a")
# Il est possible d'indexer les deux fichiers.
$ git add f0 f1
# Validation
$ git commit -m "Version 2"
[master 4d4f0d7] Version 2
 2 files changed, 1 insertion(+), 1 deletion(-)
 create mode 100644 f1
# Visualisation des versions
$ git log
commit 4d4f0d7fd78f09cdc1bad9320139bb26ed7b811c
Author: yvan <yvan.maillot@gmail.com>
Date:   Sun Oct 16 23:00:56 2016 +0200

    Version 2

commit 54ab0d5752284faed8b78065b2865cb80dab274f
Author: yvan <yvan.maillot@gmail.com>
Date:   Sun Oct 16 23:00:40 2016 +0200

    V1

commit 6b6581f1018364710d516b3c4c52ba2d2613995f
Author: yvan <yvan.maillot@gmail.com>
Date:   Sun Oct 16 23:00:19 2016 +0200

    V0
# Les noms des versions ne sont pas cohérents.
# Annulation et remplacement du message du dernier commit
$ git commit --amend -m "V2"
[master a7ff14f] V2
 Date: Sun Oct 16 23:00:56 2016 +0200
 2 files changed, 1 insertion(+), 1 deletion(-)
 create mode 100644 f1
# C'est plus cohérent ainsi.
$ git log
commit a7ff14f9e16e9a9b98d4eac39d4b96c7ac0958f2
Author: yvan <yvan.maillot@gmail.com>
Date:   Sun Oct 16 23:00:56 2016 +0200

    V2

commit 54ab0d5752284faed8b78065b2865cb80dab274f
Author: yvan <yvan.maillot@gmail.com>
Date:   Sun Oct 16 23:00:40 2016 +0200

    V1

commit 6b6581f1018364710d516b3c4c52ba2d2613995f
Author: yvan <yvan.maillot@gmail.com>
Date:   Sun Oct 16 23:00:19 2016 +0200

    V0
# Finalement f1 est en trop.
$ rm f1
# Git signale que f1 a disparu de la zone de travail
$ git status
Sur la branche master
Modifications qui ne seront pas validées :
  (utilisez "git add/rm <fichier>..." pour mettre à jour ce qui sera validé)
  (utilisez "git checkout -- <fichier>..." pour annuler les modifications dans la copie de travail)

        supprimé :        f1

aucune modification n'a été ajoutée à la validation (utilisez "git add" ou "git commit -a")
# Il faut préparer la suppression.
$ git rm f1
rm 'f1'
# La suppression est indexée. Comme ce fichier f1 était une erreur
# On écrase le dernier commit.
$ git commit --amend -m "V2"
[master d3b86a8] V2
 Date: Sun Oct 16 23:00:56 2016 +0200
 1 file changed, 1 insertion(+), 1 deletion(-)
# Affichage des versions
$ git log
commit d3b86a8e9c600713da5745f254e6387d0a5a8804
Author: yvan <yvan.maillot@gmail.com>
Date:   Sun Oct 16 23:00:56 2016 +0200

    V2

commit 54ab0d5752284faed8b78065b2865cb80dab274f
Author: yvan <yvan.maillot@gmail.com>
Date:   Sun Oct 16 23:00:40 2016 +0200

    V1

commit 6b6581f1018364710d516b3c4c52ba2d2613995f
Author: yvan <yvan.maillot@gmail.com>
Date:   Sun Oct 16 23:00:19 2016 +0200

    V0
# Tout est bon
$ git status
Sur la branche master
rien à valider, la copie de travail est propre
